{"title":"用iview + express + mysql 搭建的一个做单体测试的web程序","date":"2018-07-19T09:39:38.480Z","excerpt":"","slug":"用iview + express + mysql 搭建的一个做单体测试的web程序","updated":"2018-07-19T09:43:19.894Z","content":"<p>###用vue-cli脚手架工具创建一个基于webpack的Vue项目(<s>这些内容都是在网上找的，嘘嘘</s>~)\n#####1.安装node：<a href=\"https://link.jianshu.com/?t=https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">https://nodejs.org/en/</a>\n查看是否安装成功\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure></p>\n<p>#####2.安装Vue：\n直接在命令行中输入npm install vue。再进到想要创建项目(checklist-support)的目录下；</p>\n<ul>\n<li>\n<p>安装脚手架vue-cli\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install –global vue-cli</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p>安装webpack相关依赖\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue init webpack my-project</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p>进入到项目中 ,然后安装依赖\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd my-project </span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p>运行vue项目\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run dev</span><br></pre></td></tr></table></figure></p>\n</li>\n</ul>\n<p>#####3.安装node express：</p>\n<blockquote>\n<p>在项目根文件夹下创建一个 server 文件夹。然后里面创建下面三个文件；\n和api目录，api里面建一个文件\n<img src=\"https://upload-images.jianshu.io/upload_images/4252197-e8eb025925b98bd5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n</blockquote>\n<p>######db.js——用来添加 mysql 配置(IP，端口，用户名，密码，数据库名称)\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/ 数据库连接配置</span><br><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">    mysql: &#123;</span><br><span class=\"line\">        host: &apos;localhost&apos;,</span><br><span class=\"line\">        user: &apos;root&apos;,</span><br><span class=\"line\">        password: &apos;123456&apos;,</span><br><span class=\"line\">        database: &apos;checklist-support&apos;,</span><br><span class=\"line\">        port: &apos;3307&apos;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>######index.js——Express 服务器入口文件\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// node 后端服务器</span><br><span class=\"line\"></span><br><span class=\"line\">const userApi = require(&apos;./api/userApi&apos;);</span><br><span class=\"line\">const fs = require(&apos;fs&apos;);</span><br><span class=\"line\">const path = require(&apos;path&apos;);</span><br><span class=\"line\">const bodyParser = require(&apos;body-parser&apos;);</span><br><span class=\"line\">const express = require(&apos;express&apos;);</span><br><span class=\"line\">const app = express();</span><br><span class=\"line\"></span><br><span class=\"line\">app.use(bodyParser.json());</span><br><span class=\"line\">app.use(bodyParser.urlencoded(&#123;extended: false&#125;));</span><br><span class=\"line\"></span><br><span class=\"line\">// 后端api路由</span><br><span class=\"line\">app.use(&apos;/api/app&apos;, appApi);</span><br><span class=\"line\"></span><br><span class=\"line\">// 监听端口</span><br><span class=\"line\">app.listen(3000);</span><br><span class=\"line\">console.log(&apos;success listen at port:3000......&apos;);</span><br></pre></td></tr></table></figure></p>\n<p>######sqlMap.js——SQL 语句映射文件，供 API 调用(相当于dao层)\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// sql语句</span><br><span class=\"line\">var sqlMap = &#123;</span><br><span class=\"line\">    //App</span><br><span class=\"line\">    app: &#123;</span><br><span class=\"line\">        getApp:&quot;select * from app where delFlag = &apos;0&apos; order by updateTime asc &quot;,</span><br><span class=\"line\">        addApp:&quot;insert into app(appId,appName,appUser, version,delFlag,updateTime) values (?,?,?,?, 0,?)&quot;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">module.exports = sqlMap;</span><br></pre></td></tr></table></figure></p>\n<p>######api/userApi.js —— 测试用 API 示例(相当于controller层)\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var models = require(&apos;../db&apos;);</span><br><span class=\"line\">var express = require(&apos;express&apos;);</span><br><span class=\"line\">var router = express.Router();</span><br><span class=\"line\">var mysql = require(&apos;mysql&apos;);</span><br><span class=\"line\">var $sql = require(&apos;../sqlMap&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 连接数据库</span><br><span class=\"line\">var conn = mysql.createConnection(models.mysql);</span><br><span class=\"line\"></span><br><span class=\"line\">var jsonWrite = function(res, ret) &#123;</span><br><span class=\"line\">    if(typeof ret === &apos;undefined&apos;) &#123;</span><br><span class=\"line\">        res.json(&#123;</span><br><span class=\"line\">            code: &apos;1&apos;,</span><br><span class=\"line\">            msg: &apos;操作失败&apos;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">        res.json(ret);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">// 增加app</span><br><span class=\"line\">router.post(&apos;/addApp&apos;, (req, res) =&gt; &#123;</span><br><span class=\"line\">    var sql = $sql.app.addApp;</span><br><span class=\"line\">    var params = req.body;</span><br><span class=\"line\">    console.log(params);</span><br><span class=\"line\">    conn.query(sql, [params.appId, params.appName, params.appUser, params.version,getNowFormatDate()], function(err, result) &#123;</span><br><span class=\"line\">        if (err) &#123;</span><br><span class=\"line\">            console.log(err);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if (result) &#123;</span><br><span class=\"line\">            jsonWrite(res, result);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">//获得app</span><br><span class=\"line\">router.post(&apos;/getApp&apos;, (req, res) =&gt; &#123;</span><br><span class=\"line\">  var sql = $sql.app.getApp;</span><br><span class=\"line\">  conn.query(sql, [], function(err, result) &#123;</span><br><span class=\"line\">    if (err) &#123;</span><br><span class=\"line\">      console.log(err);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    if (result) &#123;</span><br><span class=\"line\">      jsonWrite(res, result);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">module.exports = router;</span><br></pre></td></tr></table></figure></p>\n<p>######在项目根目录下安装依赖\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install express mysql body-parser</span><br></pre></td></tr></table></figure></p>\n<p>此时在 server 文件夹下执行node index（这里也可以加载 package.json 中，然后使用 npm 执行）看到 success listen at port:3000……即服务端启动成功。\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;scripts&quot;: &#123;</span><br><span class=\"line\">  &quot;dev&quot;: &quot;webpack-dev-server --inline --progress --config build/webpack.dev.conf.js | npm run server&quot;,</span><br><span class=\"line\">  &quot;server&quot;: &quot;node server/index.js&quot;,</span><br><span class=\"line\">  &quot;start&quot;: &quot;npm run server | npm run dev&quot;,</span><br><span class=\"line\">  &quot;lint&quot;: &quot;eslint --ext .js,.vue src&quot;,</span><br><span class=\"line\">  &quot;build&quot;: &quot;node build/build.js&quot;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></p>\n<p>#####4.Vue画面通过ajax调用后台接口\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> this.$http.post(&apos;/api/app/getApp&apos;, &#123;&#125;,&#123;&#125;).then((response) =&gt; &#123;</span><br><span class=\"line\">          if(response.ok) &#123;</span><br><span class=\"line\">             //do something</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这里注意，如果没有引用vue-resource，this.$http.post是不生效的，还会报错\n<em>要在main.js中引入vue-resource</em>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// The Vue build version to load with the `import` command</span><br><span class=\"line\">// (runtime-only or standalone) has been set in webpack.base.conf with an alias.</span><br><span class=\"line\">import Vue from &apos;vue&apos;</span><br><span class=\"line\">import App from &apos;./App&apos;</span><br><span class=\"line\">import router from &apos;./router&apos;</span><br><span class=\"line\">import VueResource from &apos;vue-resource&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">// 引入iview</span><br><span class=\"line\">import iview from &apos;iview&apos;</span><br><span class=\"line\">import &apos;iview/dist/styles/iview.css&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">Vue.use(iview)</span><br><span class=\"line\">Vue.use(VueResource)</span><br><span class=\"line\"></span><br><span class=\"line\">Vue.config.productionTip = false</span><br><span class=\"line\">---</span><br><span class=\"line\">title: 用iview + express + mysql 搭建的一个做单体测试的web程序</span><br><span class=\"line\">---</span><br><span class=\"line\">/* eslint-disable no-new */</span><br><span class=\"line\">new Vue(&#123;</span><br><span class=\"line\">  el: &apos;#app&apos;,</span><br><span class=\"line\">  router,</span><br><span class=\"line\">  template: &apos;&lt;App/&gt;&apos;,</span><br><span class=\"line\">  components: &#123; App &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>整个工程目录：</p>\n<blockquote>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/4252197-006a29741629ec93.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n</blockquote>\n<p>这里，如果执行npm run dev后，报eslint的错误，可以在build目录的webpack.base.conf.js文件中，把eslint的代码注释掉,重新执行npm run dev就不会报错了：\n注释的代码如下：\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 去掉eslint验证，注释掉下面的代码</span><br><span class=\"line\">/*const createLintingRule = () =&gt; (&#123;</span><br><span class=\"line\">  test: /\\.(js|vue)$/,</span><br><span class=\"line\">  loader: &apos;eslint-loader&apos;,</span><br><span class=\"line\">  enforce: &apos;pre&apos;,</span><br><span class=\"line\">  include: [resolve(&apos;src&apos;), resolve(&apos;test&apos;)],</span><br><span class=\"line\">  options: &#123;</span><br><span class=\"line\">    formatter: require(&apos;eslint-friendly-formatter&apos;),</span><br><span class=\"line\">    emitWarning: !config.dev.showEslintErrorsInOverlay</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)*/</span><br></pre></td></tr></table></figure></p>\n<p>#####5.由于直接访问8080端口，是访问不到的，这里需要设置一下代理转发</p>\n<blockquote>\n<p>vue-cli 的 config 目录的index.js文件中有一个proxyTable参数，用来设置地址映射表，可以添加到开发时配置（dev）中\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dev: &#123;</span><br><span class=\"line\">    env: require(&apos;./dev.env&apos;),</span><br><span class=\"line\">    port: 8080,</span><br><span class=\"line\">    autoOpenBrowser: true,</span><br><span class=\"line\">    assetsSubDirectory: &apos;static&apos;,</span><br><span class=\"line\">    assetsPublicPath: &apos;/&apos;,</span><br><span class=\"line\">    proxyTable: &#123;        </span><br><span class=\"line\">        &apos;/api&apos;: &#123;</span><br><span class=\"line\">            target: &apos;http://localhost:3000/api/&apos;,</span><br><span class=\"line\">            changeOrigin: true,</span><br><span class=\"line\">            pathRewrite: &#123;                </span><br><span class=\"line\">                &apos;^/api&apos;: &apos;&apos;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    cssSourceMap: false</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>即请求/api时就代表‘<a href=\"https://link.jianshu.com/?t=http://localhost:3000/api/\" target=\"_blank\" rel=\"noopener\">http://localhost:3000/api/</a>’，\nchangeOrigin参数接收一个布尔值，如果为true，这样就不会有跨域问题了。</p>\n<hr>\n<p>###我就是根据以上的框架写的一个简单的做单体测试的小Demo，现在奉上源码地址：\nhttps://github.com/uloveits/checklist-support\n（喜欢或者有帮助的同学给个star~~~）</p>\n","next":{"title":"利用bootStrap的模态框做web的提示框或者弹出框","slug":"利用bootStrap的模态框做web的提示框或者弹出框"},"link":"/2018/07/19"}